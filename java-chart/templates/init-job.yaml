{{- if .Values.job.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.job.name }}-dbmigration-{{ .Values.job.version }}
  labels:
    app: {{ .Values.config.name }}
    env: {{ .Values.config.envName }}
    tag: {{ .Values.config.tagVersion }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
spec:
  template:
    spec:
{{ if .Values.deployment.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.deployment.nodeSelector | indent 8 }}
{{ end }}     
{{ if .Values.sa.enabled }}
      serviceAccountName: {{ .Values.config.name }}-sa
{{ end }}   
      initContainers:
        - name: get-secret
          image: {{ .Values.config.secretAgent }}
          command: ["/bin/sh", "-c"]
          args: ["get-secrets $SECRET_ID && cp /sm/config/envvars /shared/sm/config"]
          imagePullPolicy: Always
          volumeMounts:
            - name: {{ .Values.config.name }}-db-tmp-config
              mountPath: /shared/sm/config
          env:
            - name: SECRET_ID
              value: {{ .Values.config.secretId }}
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.config.awsRegion }}
      containers:
        - name: migration-job-container
          image: {{ .Values.job.image }}
          command: ["/bin/sh", "-c"]
          args: [". /shared/sm/config/envvars && ./flyway -url=\"jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true\" -schemas=${DB_NAME} -user=${DB_USER} -password=${DB_PASSWORD} migrate"]
          imagePullPolicy: Always
          volumeMounts:
            - name: {{ .Values.config.name }}-db-tmp-config
              mountPath: /shared/sm/config
      volumes: 
        - name: {{ .Values.config.name }}-db-tmp-config
          emptyDir: {}
      restartPolicy: Never
  backoffLimit: 4
{{- end -}}